(()=>{var b={};async function c(c,a){let b=a.request,d;return fetch(b).then(a=>f(c,b,d=a)).then(a=>a?Promise.resolve(a):g(c,b)).then(a=>a||d)}async function d(a,b){return g(a,b.request).then(d=>d||c(a,b))}async function e(a){return fetch(a.request)}async function f(a,c,b){return b.ok?caches.open(a).then(a=>a.put(c,b.clone())).then(()=>b):Promise.resolve(void 0)}async function g(a,b){return caches.match(b,{cacheName:a})}let a=self,h="cache-v1",i=[];a.addEventListener("fetch",a=>{let b=new URL(a.request.url);if("POST"===a.request.method&&a.respondWith(e(a)),/(.+)\.cache\.(.+)/.test(b.pathname))return a.respondWith(d(h,a));if(/(.+)\.ping\/(.+)/.test(b.pathname)){let f=new Response(b.pathname);return a.respondWith(f)}a.respondWith(c(h,a))}),a.addEventListener("install",a=>{a.waitUntil(caches.open(h).then(a=>a.addAll(i)))}),a.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(a=>a.filter(a=>a!==h).map(a=>caches.delete(a))))})})()
//# sourceMappingURL=service_worker.js.map
