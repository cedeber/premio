{"mappings":"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","sources":["<anon>","packages/my-app/src/service_worker.ts","packages/my-app/src/workers/sw-strategies.ts"],"sourcesContent":["(() => {\nvar $e3ac5fc68659784a$exports = {};\n/* --- Strategies --- */ //=> network ? save : cache\nasync function $0832b077705e9bb2$export$2e6bfe6e221c7818(cacheName, fetchEvent) {\n    const request = fetchEvent.request;\n    let fetchResponse;\n    return fetch(request).then((response)=>$0832b077705e9bb2$var$toCache(cacheName, request, fetchResponse = response)\n    ).then((response)=>response ? Promise.resolve(response) : $0832b077705e9bb2$var$fromCache(cacheName, request)\n    ).then((response)=>response || fetchResponse\n    );\n}\n//=> cache ? cache : (network ? save)\nasync function $0832b077705e9bb2$export$ae1e777d8222cdbe(cacheName, fetchEvent) {\n    return $0832b077705e9bb2$var$fromCache(cacheName, fetchEvent.request).then((response)=>response || $0832b077705e9bb2$export$2e6bfe6e221c7818(cacheName, fetchEvent)\n    );\n}\n//=> cache ? cache : network => network ? save\nasync function $0832b077705e9bb2$export$e1fd1dded5bd57ad(cacheName, fetchEvent) {\n    return $0832b077705e9bb2$var$fromCache(cacheName, fetchEvent.request).then((response)=>response ? Promise.race([\n            Promise.resolve(response),\n            $0832b077705e9bb2$export$2e6bfe6e221c7818(cacheName, fetchEvent)\n        ]) : $0832b077705e9bb2$export$2e6bfe6e221c7818(cacheName, fetchEvent)\n    );\n}\n//=> network\nasync function $0832b077705e9bb2$export$74171a18b170e946(fetchEvent) {\n    return fetch(fetchEvent.request);\n}\n//=> cache\nasync function $0832b077705e9bb2$export$d95846042cd8aa7b(cacheName, fetchEvent) {\n    return $0832b077705e9bb2$var$fromCache(cacheName, fetchEvent.request);\n}\n/* --- Helpers --- */ async function $0832b077705e9bb2$var$toCache(cacheName, request, response) {\n    return response.ok ? caches.open(cacheName).then((cache)=>cache.put(request, response.clone())\n    ).then(()=>response\n    ) : Promise.resolve(undefined);\n}\nasync function $0832b077705e9bb2$var$fromCache(cacheName, request) {\n    return caches.match(request, {\n        cacheName: cacheName\n    });\n}\n\n\n/**\n * @type ServiceWorker\n */ const $e3ac5fc68659784a$var$ctx = self;\n/* --- Configuration --- */ const $e3ac5fc68659784a$var$appCacheName = \"cache-v1\";\nconst $e3ac5fc68659784a$var$preCacheFiles = [];\n/* --- Manage requests --- */ $e3ac5fc68659784a$var$ctx.addEventListener(\"fetch\", (fetchEvent)=>{\n    const requestUrl = new URL(fetchEvent.request.url);\n    if (fetchEvent.request.method === \"POST\") fetchEvent.respondWith($0832b077705e9bb2$export$74171a18b170e946(fetchEvent));\n    // Apply SW strategies here\n    if (/(.+)\\.cache\\.(.+)/.test(requestUrl.pathname)) return fetchEvent.respondWith($0832b077705e9bb2$export$ae1e777d8222cdbe($e3ac5fc68659784a$var$appCacheName, fetchEvent));\n    if (/(.+)\\.ping\\/(.+)/.test(requestUrl.pathname)) {\n        const response = new Response(requestUrl.pathname);\n        return fetchEvent.respondWith(response);\n    }\n    fetchEvent.respondWith($0832b077705e9bb2$export$2e6bfe6e221c7818($e3ac5fc68659784a$var$appCacheName, fetchEvent));\n});\n/* --- Pre-cache some files --- */ $e3ac5fc68659784a$var$ctx.addEventListener(\"install\", (extandableEvent)=>{\n    extandableEvent.waitUntil(caches.open($e3ac5fc68659784a$var$appCacheName).then((cache)=>cache.addAll($e3ac5fc68659784a$var$preCacheFiles)\n    ));\n});\n/* --- Clear all unused caches --- */ $e3ac5fc68659784a$var$ctx.addEventListener(\"activate\", (extandableEvent)=>{\n    extandableEvent.waitUntil(caches.keys().then((cacheNames)=>cacheNames.filter((cacheName)=>cacheName !== $e3ac5fc68659784a$var$appCacheName\n        ).map((cacheName)=>caches.delete(cacheName)\n        )\n    ));\n});\n\n})();\n//# sourceMappingURL=service_worker.js.map\n","import { networkOnly, cacheFirst, networkFirst } from \"./workers/sw-strategies\";\n\n/**\n * @type ServiceWorker\n */\nconst ctx = self;\n\n/* --- Configuration --- */\n\nconst appCacheName = \"cache-v1\";\nconst preCacheFiles = [];\n\n/* --- Manage requests --- */\n\nctx.addEventListener(\"fetch\", (fetchEvent) => {\n\tconst requestUrl = new URL(fetchEvent.request.url);\n\n\tif (fetchEvent.request.method === \"POST\") {\n\t\tfetchEvent.respondWith(networkOnly(fetchEvent));\n\t}\n\n\t// Apply SW strategies here\n\tif (/(.+)\\.cache\\.(.+)/.test(requestUrl.pathname)) {\n\t\treturn fetchEvent.respondWith(cacheFirst(appCacheName, fetchEvent));\n\t}\n\n\tif (/(.+)\\.ping\\/(.+)/.test(requestUrl.pathname)) {\n\t\tconst response = new Response(requestUrl.pathname);\n\n\t\treturn fetchEvent.respondWith(response);\n\t}\n\n\tfetchEvent.respondWith(networkFirst(appCacheName, fetchEvent));\n});\n\n/* --- Pre-cache some files --- */\n\nctx.addEventListener(\"install\", (extandableEvent) => {\n\textandableEvent.waitUntil(\n\t\tcaches.open(appCacheName).then((cache) => cache.addAll(preCacheFiles)),\n\t);\n});\n\n/* --- Clear all unused caches --- */\n\nctx.addEventListener(\"activate\", (extandableEvent) => {\n\textandableEvent.waitUntil(\n\t\tcaches\n\t\t\t.keys()\n\t\t\t.then((cacheNames) =>\n\t\t\t\tcacheNames\n\t\t\t\t\t.filter((cacheName) => cacheName !== appCacheName)\n\t\t\t\t\t.map((cacheName) => caches.delete(cacheName)),\n\t\t\t),\n\t);\n});\n","/* --- Strategies --- */\n\n//=> network ? save : cache\nasync function networkFirst(cacheName, fetchEvent) {\n\tconst request = fetchEvent.request;\n\tlet fetchResponse;\n\n\treturn fetch(request)\n\t\t.then((response) => toCache(cacheName, request, (fetchResponse = response)))\n\t\t.then((response) => (response ? Promise.resolve(response) : fromCache(cacheName, request)))\n\t\t.then((response) => response || fetchResponse);\n}\n\n//=> cache ? cache : (network ? save)\nasync function cacheFirst(cacheName, fetchEvent) {\n\treturn fromCache(cacheName, fetchEvent.request).then(\n\t\t(response) => response || networkFirst(cacheName, fetchEvent),\n\t);\n}\n\n//=> cache ? cache : network => network ? save\nasync function staleWhileRevaliate(cacheName, fetchEvent) {\n\treturn fromCache(cacheName, fetchEvent.request).then((response) =>\n\t\tresponse\n\t\t\t? Promise.race([Promise.resolve(response), networkFirst(cacheName, fetchEvent)])\n\t\t\t: networkFirst(cacheName, fetchEvent),\n\t);\n}\n\n//=> network\nasync function networkOnly(fetchEvent) {\n\treturn fetch(fetchEvent.request);\n}\n\n//=> cache\nasync function cacheOnly(cacheName, fetchEvent) {\n\treturn fromCache(cacheName, fetchEvent.request);\n}\n\n/* --- Helpers --- */\n\nasync function toCache(cacheName, request, response) {\n\treturn response.ok\n\t\t? caches\n\t\t\t\t.open(cacheName)\n\t\t\t\t.then((cache) => cache.put(request, response.clone()))\n\t\t\t\t.then(() => response)\n\t\t: Promise.resolve(undefined);\n}\n\nasync function fromCache(cacheName, request) {\n\treturn caches.match(request, { cacheName });\n}\n\nexport { networkFirst, cacheFirst, staleWhileRevaliate, networkOnly, cacheOnly };\n"],"names":["$e3ac5fc68659784a$exports","$0832b077705e9bb2$export$2e6bfe6e221c7818","cacheName","fetchEvent","request","fetchResponse","fetch","then","response","$0832b077705e9bb2$var$toCache","Promise","resolve","$0832b077705e9bb2$var$fromCache","$0832b077705e9bb2$export$ae1e777d8222cdbe","$0832b077705e9bb2$export$74171a18b170e946","ok","caches","open","cache","put","clone","undefined","match","$e3ac5fc68659784a$var$ctx","self","$e3ac5fc68659784a$var$appCacheName","$e3ac5fc68659784a$var$preCacheFiles","addEventListener","requestUrl","URL","url","method","respondWith","test","pathname","Response","extandableEvent","waitUntil","addAll","keys","cacheNames","filter","map","delete"],"version":3,"file":"service_worker.js.map"}